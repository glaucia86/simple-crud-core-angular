{
  "_args": [
    [
      "is-buffer@https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.5.tgz",
      "C:\\Users\\Glaucia\\Downloads\\Labs\\simple-crud-core-angular\\ControleFuncionarioApp\\src\\FuncionarioApp"
    ]
  ],
  "_from": "is-buffer@>=1.1.5 <2.0.0",
  "_id": "is-buffer@1.1.5",
  "_inCache": true,
  "_location": "/is-buffer",
  "_phantomChildren": {},
  "_requested": {
    "name": "is-buffer",
    "raw": "is-buffer@https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.5.tgz",
    "rawSpec": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.5.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.5.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/align-text/kind-of",
    "/anymatch/kind-of",
    "/base/kind-of",
    "/class-utils/kind-of",
    "/expand-brackets/kind-of",
    "/expand-range/kind-of",
    "/extglob/kind-of",
    "/is-accessor-descriptor/kind-of",
    "/is-data-descriptor/kind-of",
    "/is-descriptor/kind-of",
    "/is-number/kind-of",
    "/kind-of",
    "/object-copy/kind-of",
    "/snapdragon-util/kind-of",
    "/snapdragon/kind-of",
    "/static-extend/kind-of",
    "/to-object-path/kind-of",
    "/to-regex/kind-of",
    "/use/kind-of"
  ],
  "_resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.5.tgz",
  "_shasum": "1f3b26ef613b214b88cbca23cc6c01d87961eecc",
  "_shrinkwrap": null,
  "_spec": "is-buffer@https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.5.tgz",
  "_where": "C:\\Users\\Glaucia\\Downloads\\Labs\\simple-crud-core-angular\\ControleFuncionarioApp\\src\\FuncionarioApp",
  "author": {
    "email": "feross@feross.org",
    "name": "Feross Aboukhadijeh",
    "url": "http://feross.org/"
  },
  "bugs": {
    "url": "https://github.com/feross/is-buffer/issues"
  },
  "dependencies": {},
  "description": "Determine if an object is a Buffer",
  "devDependencies": {
    "standard": "*",
    "tape": "^4.0.0",
    "zuul": "^3.0.0"
  },
  "homepage": "https://github.com/feross/is-buffer#readme",
  "keywords": [
    "arraybuffer",
    "browser",
    "browser buffer",
    "browserify",
    "buffer",
    "buffers",
    "core buffer",
    "dataview",
    "float32array",
    "float64array",
    "int16array",
    "int32array",
    "type",
    "typed array",
    "uint32array"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "is-buffer",
  "optionalDependencies": {},
  "readme": "# is-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][npm-url]\n\n#### Determine if an object is a [`Buffer`](http://nodejs.org/api/buffer.html) (including the [browserify Buffer](https://github.com/feross/buffer))\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[travis-image]: https://img.shields.io/travis/feross/is-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/is-buffer\n[npm-image]: https://img.shields.io/npm/v/is-buffer.svg\n[npm-url]: https://npmjs.org/package/is-buffer\n[downloads-image]: https://img.shields.io/npm/dm/is-buffer.svg\n[saucelabs-image]: https://saucelabs.com/browser-matrix/is-buffer.svg\n[saucelabs-url]: https://saucelabs.com/u/is-buffer\n\n## Why not use `Buffer.isBuffer`?\n\nThis module lets you check if an object is a `Buffer` without using `Buffer.isBuffer` (which includes the whole [buffer](https://github.com/feross/buffer) module in [browserify](http://browserify.org/)).\n\nIt's future-proof and works in node too!\n\n## install\n\n```bash\nnpm install is-buffer\n```\n\n## usage\n\n```js\nvar isBuffer = require('is-buffer')\n\nisBuffer(new Buffer(4)) // true\n\nisBuffer(undefined) // false\nisBuffer(null) // false\nisBuffer('') // false\nisBuffer(true) // false\nisBuffer(false) // false\nisBuffer(0) // false\nisBuffer(1) // false\nisBuffer(1.0) // false\nisBuffer('string') // false\nisBuffer({}) // false\nisBuffer(function foo () {}) // false\n```\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/is-buffer.git"
  },
  "scripts": {
    "test": "standard && npm run test-node && npm run test-browser",
    "test-browser": "zuul -- test/*.js",
    "test-browser-local": "zuul --local -- test/*.js",
    "test-node": "tape test/*.js"
  },
  "testling": {
    "files": "test/*.js"
  },
  "version": "1.1.5"
}
