{
  "_args": [
    [
      "map-visit@https://registry.npmjs.org/map-visit/-/map-visit-0.1.5.tgz",
      "C:\\Users\\Glaucia\\Downloads\\Labs\\simple-crud-core-angular\\ControleFuncionarioApp\\src\\FuncionarioApp"
    ]
  ],
  "_from": "map-visit@>=0.1.5 <0.2.0",
  "_id": "map-visit@0.1.5",
  "_inCache": true,
  "_location": "/map-visit",
  "_phantomChildren": {},
  "_requested": {
    "name": "map-visit",
    "raw": "map-visit@https://registry.npmjs.org/map-visit/-/map-visit-0.1.5.tgz",
    "rawSpec": "https://registry.npmjs.org/map-visit/-/map-visit-0.1.5.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/map-visit/-/map-visit-0.1.5.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/collection-visit"
  ],
  "_resolved": "https://registry.npmjs.org/map-visit/-/map-visit-0.1.5.tgz",
  "_shasum": "dbe43927ce5525b80dfc1573a44d68c51f26816b",
  "_shrinkwrap": null,
  "_spec": "map-visit@https://registry.npmjs.org/map-visit/-/map-visit-0.1.5.tgz",
  "_where": "C:\\Users\\Glaucia\\Downloads\\Labs\\simple-crud-core-angular\\ControleFuncionarioApp\\src\\FuncionarioApp",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/map-visit/issues"
  },
  "dependencies": {
    "lazy-cache": "^2.0.1",
    "object-visit": "^0.3.4"
  },
  "description": "Map `visit` over an array of objects.",
  "devDependencies": {
    "gulp-format-md": "^0.1.10",
    "lodash": "^4.14.1",
    "mocha": "^3.0.1",
    "should": "^10.0.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js",
    "utils.js"
  ],
  "homepage": "https://github.com/jonschlinkert/map-visit",
  "keywords": [
    "array",
    "arrays",
    "function",
    "helper",
    "invoke",
    "key",
    "map",
    "method",
    "object",
    "objects",
    "value",
    "visit",
    "visitor"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "map-visit",
  "optionalDependencies": {},
  "readme": "# map-visit [![NPM version](https://img.shields.io/npm/v/map-visit.svg?style=flat)](https://www.npmjs.com/package/map-visit) [![NPM downloads](https://img.shields.io/npm/dm/map-visit.svg?style=flat)](https://npmjs.org/package/map-visit) [![Build Status](https://img.shields.io/travis/jonschlinkert/map-visit.svg?style=flat)](https://travis-ci.org/jonschlinkert/map-visit)\n\nMap `visit` over an array of objects.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save map-visit\n```\n\n## Usage\n\n```js\nvar mapVisit = require('map-visit');\n```\n\n## Assign or Merge vs. Visit\n\nLet's say you want to add a `set` method to your application that will:\n\n* set key-value pairs on a `data` object\n* extend objects onto the `data` object\n* extend arrays of objects onto the data object\n\n**Example using `extend`**\n\nHere is one way to accomplish this using Lo-Dash's `extend`:\n\n```js\nvar _ = require('lodash');\n\nvar obj = {\n  data: {},\n  set: function (key, value) {\n    if (Array.isArray(key)) {\n      _.extend.apply(_, [obj.data].concat(key));\n    } else if (typeof key === 'object') {\n      _.extend(obj.data, key);\n    } else {\n      obj.data[key] = value;\n    }\n  }\n};\n\nobj.set('a', 'a');\nobj.set([{b: 'b'}, {c: 'c'}]);\nobj.set({d: {e: 'f'}});\n\nconsole.log(obj.data);\n//=> {a: 'a', b: 'b', c: 'c', d: { e: 'f' }}\n```\n\nThe above approach works fine for most use cases. But **if you also want to emit an event** each time a property is added to the `data` object. A better approach would be to use `visit`.\n\n**Example using `visit`**\n\nIn this approach, when an array is passed to `set`, `mapVisit` calls `set` on each object in the array. When an object is passed, `visit` calls `set` on each property in the object. As a result, the `data` event will be emitted every time a property is added to `data`.\n\n```js\nvar mapVisit = require('map-visit');\nvar visit = require('object-visit');\n\nvar obj = {\n  data: {},\n  set: function (key, value) {\n    if (Array.isArray(key)) {\n      mapVisit(obj, 'set', key);\n    } else if (typeof key === 'object') {\n      visit(obj, 'set', key);\n    } else {\n      // some event-emitter\n      console.log('emit', key, value);\n      obj.data[key] = value;\n    }\n  }\n};\n\nobj.set('a', 'a');\nobj.set([{b: 'b'}, {c: 'c'}]);\nobj.set({d: {e: 'f'}});\nobj.set({g: 'h', i: 'j', k: 'l'});\n\nconsole.log(obj.data);\n//=> {a: 'a', b: 'b', c: 'c', d: { e: 'f' }, g: 'h', i: 'j', k: 'l'}\n\n// events would look something like:\n// emit a a\n// emit b b\n// emit c c\n// emit d { e: 'f' }\n// emit g h\n// emit i j\n// emit k l\n```\n\n## About\n\n### Related projects\n\n* [collection-visit](https://www.npmjs.com/package/collection-visit): Visit a method over the items in an object, or map visit over the objects… [more](https://github.com/jonschlinkert/collection-visit) | [homepage](https://github.com/jonschlinkert/collection-visit \"Visit a method over the items in an object, or map visit over the objects in an array.\")\n* [object-visit](https://www.npmjs.com/package/object-visit): Call a specified method on each value in the given object. | [homepage](https://github.com/jonschlinkert/object-visit \"Call a specified method on each value in the given object.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/map-visit/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on August 05, 2016._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/map-visit.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "layout": "default",
    "lint": {
      "reflinks": true
    },
    "plugins": [
      "gulp-format-md"
    ],
    "reflinks": [
      "verb",
      "verb-generate-readme"
    ],
    "related": {
      "list": [
        "collection-visit",
        "object-visit"
      ]
    },
    "tasks": [
      "readme"
    ],
    "toc": false
  },
  "version": "0.1.5"
}
