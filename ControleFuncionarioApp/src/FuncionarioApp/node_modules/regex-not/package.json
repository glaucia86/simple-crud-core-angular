{
  "_args": [
    [
      "regex-not@https://registry.npmjs.org/regex-not/-/regex-not-1.0.0.tgz",
      "C:\\Users\\Glaucia\\Downloads\\Labs\\simple-crud-core-angular\\ControleFuncionarioApp\\src\\FuncionarioApp"
    ]
  ],
  "_from": "regex-not@>=1.0.0 <2.0.0",
  "_id": "regex-not@1.0.0",
  "_inCache": true,
  "_location": "/regex-not",
  "_phantomChildren": {},
  "_requested": {
    "name": "regex-not",
    "raw": "regex-not@https://registry.npmjs.org/regex-not/-/regex-not-1.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/expand-brackets",
    "/extglob",
    "/micromatch",
    "/nanomatch",
    "/to-regex"
  ],
  "_resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.0.tgz",
  "_shasum": "42f83e39771622df826b02af176525d6a5f157f9",
  "_shrinkwrap": null,
  "_spec": "regex-not@https://registry.npmjs.org/regex-not/-/regex-not-1.0.0.tgz",
  "_where": "C:\\Users\\Glaucia\\Downloads\\Labs\\simple-crud-core-angular\\ControleFuncionarioApp\\src\\FuncionarioApp",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/regex-not/issues"
  },
  "dependencies": {
    "extend-shallow": "^2.0.1"
  },
  "description": "Create a javascript regular expression for matching everything except for the given string.",
  "devDependencies": {
    "gulp-format-md": "^0.1.10",
    "mocha": "^3.0.2"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/jonschlinkert/regex-not",
  "keywords": [
    "exec",
    "match",
    "negate",
    "negation",
    "not",
    "regex",
    "regular expression",
    "test"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "regex-not",
  "optionalDependencies": {},
  "readme": "# regex-not [![NPM version](https://img.shields.io/npm/v/regex-not.svg?style=flat)](https://www.npmjs.com/package/regex-not) [![NPM downloads](https://img.shields.io/npm/dm/regex-not.svg?style=flat)](https://npmjs.org/package/regex-not) [![Build Status](https://img.shields.io/travis/jonschlinkert/regex-not.svg?style=flat)](https://travis-ci.org/jonschlinkert/regex-not)\n\n> Create a javascript regular expression for matching everything except for the given string.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save regex-not\n```\n\n## Usage\n\n```js\nvar not = require('regex-not');\n```\n\nThe main export is a function that takes a string an options object.\n\n```js\nnot(string[, options]);\n```\n\n**Example**\n\n```js\nvar not = require('regex-not');\nconsole.log(not('foo'));\n//=> /^(?:(?!^(?:foo)$).)*$/\n```\n\n**Strict matching**\n\nBy default, the returned regex is for strictly (not) matching the exact given pattern (in other words, \"match this string if it does NOT _exactly equal_ `foo`\"):\n\n```js\nvar re = not('foo');\nconsole.log(re.test('foo'));     //=> false\nconsole.log(re.test('bar'));     //=> true\nconsole.log(re.test('foobar'));  //=> true\nconsole.log(re.test('barfoo'));  //=> true\n```\n\n### .create\n\nReturns a string to allow you to create your own regex:\n\n```js\nconsole.log(not.create('foo'));\n//=> '(?:(?!^(?:foo)$).)*'\n```\n\n### Options\n\n**options.contains**\n\nYou can relax strict matching by setting `options.contains` to true (in other words, \"match this string if it does NOT _contain_ `foo`\"):\n\n```js\nvar re = not('foo');\nconsole.log(re.test('foo', {contains: true}));     //=> false\nconsole.log(re.test('bar', {contains: true}));     //=> true\nconsole.log(re.test('foobar', {contains: true}));  //=> false\nconsole.log(re.test('barfoo', {contains: true}));  //=> false\n```\n\n## About\n\n### Related projects\n\n* [regex-cache](https://www.npmjs.com/package/regex-cache): Memoize the results of a call to the RegExp constructor, avoiding repetitious runtime compilation of… [more](https://github.com/jonschlinkert/regex-cache) | [homepage](https://github.com/jonschlinkert/regex-cache \"Memoize the results of a call to the RegExp constructor, avoiding repetitious runtime compilation of the same string and options, resulting in suprising performance improvements.\")\n* [to-regex](https://www.npmjs.com/package/to-regex): Generate a regex from a string or array of strings. | [homepage](https://github.com/jonschlinkert/to-regex \"Generate a regex from a string or array of strings.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/regex-not/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.1.31, on October 07, 2016._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/regex-not.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "layout": "default",
    "lint": {
      "reflinks": true
    },
    "plugins": [
      "gulp-format-md"
    ],
    "reflinks": [
      "verb",
      "verb-generate-readme"
    ],
    "related": {
      "list": [
        "regex-cache",
        "to-regex"
      ]
    },
    "tasks": [
      "readme"
    ],
    "toc": false
  },
  "version": "1.0.0"
}
